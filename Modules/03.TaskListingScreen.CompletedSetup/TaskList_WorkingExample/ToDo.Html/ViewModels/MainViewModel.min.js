var ToDo;(function(n){(function(n){var i=function(){function n(){var n=this;this.ToDos=ko.observableArray(),this.OriginalToDos=ko.observableArray(),this.FilterText=ko.observable(""),this.fetchToDoItems(),this.OverdueCount=ko.computed(function(){return _.filter(n.ToDos(),function(n){return n.Status()=="Overdue"}).length}),this.ActiveCount=ko.computed(function(){return _.filter(n.ToDos(),function(n){return n.Status()=="Active"}).length}),this.TotalCount=ko.computed(function(){return n.ToDos().length})}return n.prototype.deleteToDo=function(n){var t=this,i="http://localhost:8888/ToDoServices/api/ToDo/Delete/"+n;$.ajax({url:i,type:"DELETE",success:function(){t.fetchToDoItems()},error:function(){}})},n.prototype.fetchToDoItems=function(){var i=this,n=this;n.OriginalToDos.removeAll(),n.ToDos.removeAll(),$.get("http://localhost:8888/ToDoServices/api/ToDo/").done(function(r){var u=n.ToDos();_.each(r,function(n){var i=ko.mapping.fromJS(n,{},new t);u.push(i)}),n.ToDos.valueHasMutated(),n.OriginalToDos(i.ToDos())})},n.prototype.filterList=function(){var n=this,t;n.FilterText().length==0?n.ToDos(n.OriginalToDos()):(t=_.filter(n.OriginalToDos(),function(t){return t.Task().toLowerCase().indexOf(n.FilterText().toLowerCase())>=0}),n.ToDos(t))},n}(),t;n.MainViewModel=i,t=function(){function n(){var n=this;this.Id=ko.observable(0),this.Task=ko.observable(""),this.DueDate=ko.observable(""),this.ReminderDate=ko.observable(""),this.Priority=ko.observable(""),this.Category=ko.observable(""),this.Status=ko.observable(),this.StatusStyle=ko.computed(function(){return n.Status()!=undefined?"circle status-"+n.Status().Description().toLowerCase()+"-color":"circle status-active-color"}),this.DisplayDueDate=ko.computed(function(){var t="";return n.DueDate()!=undefined&&n.DueDate()!=""&&(t=moment(n.DueDate()).format("L")),t}),this.DisplayReminderDate=ko.computed(function(){var t="";return n.ReminderDate()!=undefined&&n.ReminderDate()!=""&&(t=moment(n.ReminderDate()).format("L")),t})}return n}(),n.ToDoListItemViewModel=t})(n.ViewModels||(n.ViewModels={}));var t=n.ViewModels})(ToDo||(ToDo={}))
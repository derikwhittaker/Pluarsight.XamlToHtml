var ToDo;(function(n){var t=function(){function n(n){this.Parent=undefined,this.OriginalToDoModel=ko.observable(),this.Id=ko.observable(0),this.Task=ko.observable(""),this.DueDate=ko.observable(),this.ReminderDate=ko.observable(),this.Priorities=ko.observableArray(),this.SelectedPriority=ko.observable(),this.Categories=ko.observableArray(),this.SelectedCategory=ko.observable(),this.Statuses=ko.observableArray(),this.SelectedStatus=ko.observable(),this.remoteCallCounter=0,this.totalRemoteCallsExpected=3,this.Id(n),$("#dueDatePicker").datepicker(),$("#reminderDatePicker").datepicker(),this.setupValidation()}return n.prototype.setupValidation=function(){var n=this;ko.validation.init(),this.Task.extend({required:!0}),this.DueDate.extend({date:!0}),this.DueDate.extend({validation:{validator:function(n){if(n==undefined)return!0;var t=moment(n),i=t.diff(moment(),"days");return i>=0},message:"Date cannot be in the past"}}),this.ReminderDate.extend({validation:{validator:function(t){if(t==undefined)return!0;var i=moment(t),r=moment(n.DueDate()),u=i.diff(r,"days");return u<=0},message:"Reminder Date must be before Due Date"}})},n.prototype.fetchData=function(){this.remoteCallCounter=0,this.fetchToDoItem(),this.fetchCategories(),this.fetchPriorities(),this.fetchStatuses()},n.prototype.fetchToDoItem=function(){var n=this,t="http://localhost:8888/ToDoServices/api/todo/get/"+this.Id();$.get(t).done(function(t){n.OriginalToDoModel(ko.mapping.fromJS(t)),n.Task(t.Task),n.DueDate(moment(t.DueDate).format("MM/DD/YYYY")),t.ReminderDate&&n.ReminderDate(moment(t.ReminderDate).format("MM/DD/YYYY"))}).fail(function(){})},n.prototype.fetchCategories=function(){var n=this;$.ajax({url:"http://localhost:8888/ToDoServices/api/Meta/Categories",type:"Get",success:function(t){n.totalRemoteCallsExpected++,n.Categories(t)}})},n.prototype.fetchPriorities=function(){var n=this;$.ajax({url:"http://localhost:8888/ToDoServices/api/Meta/Priorities",type:"Get",success:function(t){n.totalRemoteCallsExpected++,n.Priorities(t)}})},n.prototype.fetchStatuses=function(){var n=this;$.ajax({url:"http://localhost:8888/ToDoServices/api/Meta/Statuses",type:"Get",success:function(t){n.totalRemoteCallsExpected++,n.Statuses(t)}})},n.prototype.saveToDo=function(){var n=this,t={Id:n.Id(),Task:n.Task(),DueDate:n.DueDate(),ReminderDate:n.ReminderDate(),Category:ko.toJS(n.SelectedCategory),Priority:ko.toJS(n.SelectedPriority),Status:ko.toJS(n.SelectedStatus)};$.ajax({url:"http://localhost:8888/ToDoServices/api/ToDo/Update",type:"POST",data:t,success:function(){$("#todo-edit-modal").modal("hide")},error:function(){}})},n}();n.MaintainItemViewModel=t})(ToDo||(ToDo={}))